package kh.java.polymorphism.animal;

public abstract class Animal {
/**
 * 자식클래스에 대해 메소드 구현 강제화
 * 객체화 할 수 없다. new 추상클래스(), new 인터페이스() ->객체생성 불가
 * 자식클래스에 대한 규격을 제공! 부모클래스 타입으로도 override할 메소드를 모두 사용가능.
 * 
 * 1. 추상클래스(일반클래스 - 일반필드 / 일반 메소드도  물려줄 수 있다)
 * 		- 추상메소드를 1개 이상 가지고 있다면, 채당 클래스는 반드시 추상클래스여야 한다.
 * 		- 객체생성을 방지하기 위해 추상메소드가 없어도 추상클래스로 만들 수 있다.
 * 		- 추상메소드(미완성메소드)는 abstract키워드를 가지며, 메소드 몸통부 없음.
 * 		- 자식클래스에서 반드시 완성(재작성,Override)해야할 메소드  → 메소드 구현 강제화
 * 
 * 2. 인터페이스 (추상메소드 구현 강제화만을 목적으로하는 부모타입) implements(구현) <-일반클래스에서 사용시
 * 		- 추상메소드와 상수필드만 가질 수 있다.
 * 		- 다중구현이 가능(여러개를 상속 할 수 있음)
 * 		- 인터페이스간 상속은 extends키워드를 사용
 * 		- 일반클래스에서 인터페이스 구현시는 implements 사용
 * 		- jdk8부터 default/static메소드 사용가능
 * 
 */
	public void say() {
		System.out.println("안녕하세요, 저는 동물입니다.");
	}
	/**
	 * 자식클래스의 구체적인 공격메소드를 추상화처리(묶어주기-> 공통적인 메소드를 만들어줌)
	 * 
	 * 메소드의 구현 강제화 : 추상클래스 & 추상 메소드
	 */
	public abstract void attack();
}
